#BlueJ class context
comment0.target=Steganography
comment0.text=\n\ Write\ a\ description\ of\ class\ Steganography\ here.\n\n\ @author\ Erik\ Feng\n\ @version\ 2/21/2023\n
comment1.params=p
comment1.target=void\ clearLow(Pixel)
comment1.text=\n\ Clear\ the\ lower\ (rightmost)\ two\ bits\ in\ a\ pixel.\n
comment10.params=picture\ differenceList
comment10.target=Picture\ showDifferentArea(Picture,\ java.util.ArrayList)
comment11.params=s
comment11.target=java.util.ArrayList\ encodeString(java.lang.String)
comment11.text=\n\ Takes\ a\ string\ consisting\ of\ letters\ and\ spaces\ and\n\ encodes\ the\ string\ into\ an\ arraylist\ of\ integers.\n\ The\ integers\ are\ 1-26\ for\ A-Z,\ 27\ for\ space,\ and\ 0\ for\ end\ of\n\ string.\ The\ arraylist\ of\ integers\ is\ returned.\n\ \n\ @param\ s\ string\ consisting\ of\ letters\ and\ spaces\n\ @return\ ArrayList\ containing\ integer\ encoding\ of\ uppercase\n\ version\ of\ s\n
comment12.params=codes
comment12.target=java.lang.String\ decodeString(java.util.ArrayList)
comment12.text=\n\ Returns\ the\ string\ represented\ by\ the\ codes\ arraylist.\ *\ 1-26\ \=\ A-Z,\ 27\ \=\ space\n\ @param\ codes\ encoded\ string\n\ @return\ decoded\ string\n
comment13.params=num
comment13.target=int[]\ getBitPairs(int)
comment13.text=\n\ Given\ a\ number\ from\ 0\ to\ 63,\ creates\ and\ returns\ a\ 3-element\n\ int\ array\ consisting\ of\ the\ integers\ representing\ the\ \n\ pairs\ of\ bits\ in\ the\ number\ from\ right\ to\ left.\n\ @param\ num\ nnumber\ to\ be\ broken\ up\n\ @return\ bit\ pairs\ in\ number\n
comment14.params=source\ s
comment14.target=void\ hideText(Picture,\ java.lang.String)
comment14.text=\ \n\ Hide\ a\ string\ (must\ be\ only\ capital\ letters\ and\ spaces)\ in\ a\ \n\ picture.\n\ The\ stirng\ always\ starts\ in\ the\ upper\ left\ corner.\n\ @param\ source\ picture\ to\ hide\ string\ in\ \n\ @param\ s\ string\ to\ hide\n\ @return\ picture\ with\ hidden\ string\n
comment15.params=source
comment15.target=java.lang.String\ revealText(Picture)
comment15.text=\n\ Returns\ a\ string\ hidden\ in\ the\ picture\n\ @param\ source\ picture\ with\ hidden\ string\n\ @return\ revealed\ string\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment2.params=picture
comment2.target=Picture\ testClearLow(Picture)
comment3.params=p\ c
comment3.target=void\ setLow(Pixel,\ java.awt.Color)
comment3.text=\n\ Set\ the\ lower\ 2\ bits\ in\ a\ pixel\ to\ the\ highest\ 2\ bits\ in\ c\n
comment4.params=picture
comment4.target=Picture\ testSetLow(Picture)
comment5.params=hidden
comment5.target=Picture\ revealPicture(Picture)
comment5.text=\n\ Sets\ the\ highest\ two\ bits\ of\ each\ pixel's\ colors\n\ to\ the\ lowest\ two\ bits\ of\ each\ pixel's\ colors\n
comment6.params=source\ secret
comment6.target=boolean\ canHide(Picture,\ Picture)
comment6.text=\n\ Determines\ whether\ secret\ can\ be\ hidden\ in\ source,\ which\ is\n\ true\ if\ source\ and\ secret\ are\ the\ same\ dimensions.\n\ @param\ source\ is\ not\ null\n\ @param\ secret\ is\ not\ null\n\ @return\ combined\ Picture\ with\ secret\ hidden\ in\ source\n\ precondition\:\ source\ is\ same\ width\ and\ height\ as\ secret\n
comment7.params=source\ secret\ startRow\ startCol
comment7.target=Picture\ hidePicture(Picture,\ Picture,\ int,\ int)
comment8.params=picture1\ picture2
comment8.target=boolean\ isSame(Picture,\ Picture)
comment9.params=picture1\ picture2
comment9.target=java.util.ArrayList\ findDifferences(Picture,\ Picture)
numComments=17
